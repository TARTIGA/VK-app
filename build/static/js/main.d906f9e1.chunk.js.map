{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["blueBackground","backgroundColor","App","useState","activeView","activePanel","setactivePanel","headerContentActive","setHeaderContentActive","setPopup","snackbar","setSnackbar","alert","setAlert","actionLog","setactionLog","activeModal","setactiveModal","toggleHeader","addActionLogItem","value","console","log","modal","onClose","id","header","left","onClick","right","dynamicContentHeight","popout","aside","style","transform","opened","before","data-mode","expandable","setTimeout","layout","size","fill","width","height","color","actions","title","autoclose","mode","action","map","i","key","separator","description","centered","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0ZA2CMA,G,OAAiB,CACrBC,gBAAiB,kBAuQJC,EApQH,WAAO,IAAD,EACoBC,mBAAS,SAD7B,mBACTC,EADS,aAEsBD,mBAAS,WAF/B,mBAETE,EAFS,KAEIC,EAFJ,OAGsCH,oBAAS,GAH/C,mBAGTI,EAHS,KAGYC,EAHZ,OAIUL,mBAAS,MAJnB,mBAIFM,GAJE,aAKgBN,mBAAS,MALzB,mBAKTO,EALS,KAKCC,EALD,OAMUR,mBAAS,MANnB,mBAMTS,EANS,KAMFC,EANE,OAOkBV,mBAAS,IAP3B,mBAOTW,EAPS,KAOEC,EAPF,OAQsBZ,mBAAS,MAR/B,mBAQTa,EARS,KAQIC,EARJ,KAUVC,EAAe,WACnBV,GAAwBD,IAsBpBY,EAAmB,SAACC,GACxBC,QAAQC,IAAI,CAAC,mBAAoBF,IACjCL,EAAa,GAAD,mBAAKD,GAAL,CAAgBM,MA2BxBG,EACJ,kBAAC,IAAD,CAAWP,YAAaA,EAAaQ,QAAS,kBAAMP,EAAe,QACjE,kBAAC,IAAD,CACEQ,GAAG,YACHD,QAAS,kBAAMP,EAAe,OAC9BS,OACE,kBAAC,IAAD,CACEC,KACE,kBAAC,IAAD,CAAmBC,QAAS,kBAAMX,EAAe,QAC/C,kBAAC,IAAD,OAGJY,MACE,kBAAC,IAAD,CAAmBD,QAAS,kBAAMX,EAAe,QAC/C,kBAAC,IAAD,QARN,gJAeFa,sBAAoB,GAEpB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASJ,OAAO,6EAAhB,iDAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,OAAO,uEAAhB,yCAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,OAAO,uEAAhB,wGAKN,kBAAC,IAAD,CACED,GAAG,MACHD,QAAS,kBAAMP,EAAe,OAC9Ba,sBAAoB,GAHtB,QAUJ,OACE,kBAAC,IAAD,CAAM1B,WAAYA,GAChB,kBAAC,IAAD,CACEC,YAAaA,EACboB,GAAG,QACHM,OAAgBnB,EAChBW,MAAOA,GAEP,kBAAC,IAAD,CAAOE,GAAG,UACR,kBAAC,IAAD,CACEE,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJE,MAAO,kBAAC,IAAD,OAEP,kBAAC,IAAD,CACEG,MACE,kBAAC,IAAD,CACEC,MAAO,CACLC,UAAU,UAAD,OACP3B,EAAsB,SAAW,IAD1B,QAMfqB,QAAS,kBAAMV,MAVjB,iBAeF,kBAAC,IAAD,CACEiB,OAAQ5B,EACRiB,QAASN,GAET,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMkB,OAAQ,kBAAC,IAAD,MAAwBC,YAAU,OAAhD,eAGA,kBAAC,IAAD,CAAMD,OAAQ,kBAAC,IAAD,MAA2BC,YAAU,WAAnD,yBAKJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,YAAU,EACVF,OAAQ,kBAAC,IAAD,MACRR,QAAS,kBAAMtB,EAAe,YAHhC,WAOA,kBAAC,IAAD,CACEgC,YAAU,EACVF,OAAQ,kBAAC,IAAD,MACRR,QAAS,kBAAMtB,EAAe,YAHhC,eAOA,kBAAC,IAAD,CACEgC,YAAU,EACVF,OAAQ,kBAAC,IAAD,MACRR,QAAS,kBAAMtB,EAAe,YAHhC,SAOA,kBAAC,IAAD,CACEgC,YAAU,EACVF,OAAQ,kBAAC,IAAD,MACRR,QAAS,kBApKnBnB,EAAS,kBAAC,IAAD,YACT8B,YAAW,kBAAM9B,EAAS,QAAO,OAgKzB,iBAOA,kBAAC,IAAD,CACE6B,YAAU,EACVF,OAAQ,kBAAC,IAAD,MACRR,QAAS,WAvKflB,GACJC,EACE,kBAAC,IAAD,CACE6B,OAAO,WACPhB,QAAS,kBAAMb,EAAY,OAC3ByB,OACE,kBAAC,IAAD,CAAQK,KAAM,GAAIR,MAAOjC,GACvB,kBAAC,IAAD,CAAY0C,KAAK,OAAOC,MAAO,GAAIC,OAAQ,OALjD,wLAkKM,eAOA,kBAAC,IAAD,CACEN,YAAU,EACVF,OAAQ,kBAAC,IAAD,CAAoBH,MAAO,CAAEY,MAAO,SAC5CjB,QAAS,WA1JnBf,EACE,kBAAC,IAAD,CACEiC,QAAS,CACP,CACEC,MAAO,uCACPC,WAAW,EACXC,KAAM,SACNC,OAAQ,kBACN/B,EAAiB,+LAErB,CACE4B,MAAO,mDACPC,WAAW,EACXE,OAAQ,kBACN/B,EAAiB,kNAGvBK,QAAS,kBAAMX,EAAS,QAExB,mJACA,iTAmII,SAOA,kBAAC,IAAD,CACEyB,YAAU,EACVF,OAAQ,kBAAC,IAAD,CAAsBH,MAAO,CAAEY,MAAO,UAC9CjB,QAAS,kBAAMX,EAAe,SAHhC,aAOA,kBAAC,IAAD,CACEqB,YAAU,EACVF,OAAQ,kBAAC,IAAD,CAAsBH,MAAO,CAAEY,MAAO,WAC9CjB,QAAS,kBAAMX,EAAe,eAHhC,eAQDP,EACAI,EAAUqC,KAAI,SAAC/B,EAAOgC,GAAR,OACb,kBAAC,IAAD,CAAKC,IAAKD,GAAIhC,OAGlB,kBAAC,IAAD,CAAOK,GAAG,UACR,kBAAC,IAAD,CACE6B,WAAW,EACX3B,KAAM,kBAAC,IAAD,CAAiBC,QAAS,kBAAMtB,EAAe,cAFvD,eAMA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEiD,YAAY,QAEZ3B,QAAS,kBAAMtB,EAAe,YAHhC,eAOA,kBAAC,IAAD,CACEiD,YAAY,kBAEZ3B,QAAS,kBAAMtB,EAAe,YAHhC,cAOA,kBAAC,IAAD,CACEiD,YAAY,SAEZ3B,QAAS,kBAAMtB,EAAe,YAHhC,cAQF,kBAAC,IAAD,CAAOmB,GAAG,SAAS+B,UAAQ,GACzB,kBAAC,IAAD,CACE7B,KAAM,kBAAC,IAAD,CAAiBC,QAAS,kBAAMtB,EAAe,cADvD,cAKA,kBAAC,IAAD,MACA,yBAAK2B,MAAO,CAAEwB,UAAW,KAAzB,wBChSUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtD,QAAQsD,MAAMA,EAAMC,c","file":"static/js/main.d906f9e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  Root,\r\n  CellButton,\r\n  View,\r\n  Panel,\r\n  PanelHeader,\r\n  Header,\r\n  Group,\r\n  Cell,\r\n  Search,\r\n  Avatar,\r\n  PanelHeaderBack,\r\n  Spinner,\r\n  PanelHeaderButton,\r\n  PanelHeaderEdit,\r\n  PanelHeaderContent,\r\n  PanelHeaderContext,\r\n  List,\r\n  ScreenSpinner,\r\n  Snackbar,\r\n  Alert,\r\n  Div,\r\n  ModalRoot,\r\n  ModalPage,\r\n  ModalCard,\r\n  ModalPageHeader,\r\n  InfoRow,\r\n} from '@vkontakte/vkui';\r\n\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\nimport Icon28UsersOutline from '@vkontakte/icons/dist/28/users_outline';\r\nimport Icon28MusicOutline from '@vkontakte/icons/dist/28/music_outline';\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\nimport Icon28DownloadOutline from '@vkontakte/icons/dist/28/download_outline';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28BlockOutline from '@vkontakte/icons/dist/28/block_outline';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nconst blueBackground = {\r\n  backgroundColor: 'var(--accent)',\r\n};\r\n\r\nconst App = () => {\r\n  const [activeView, setactiveView] = useState('view1');\r\n  const [activePanel, setactivePanel] = useState('panel1');\r\n  const [headerContentActive, setHeaderContentActive] = useState(false);\r\n  const [popup, setPopup] = useState(null);\r\n  const [snackbar, setSnackbar] = useState(null);\r\n  const [alert, setAlert] = useState(null);\r\n  const [actionLog, setactionLog] = useState([]);\r\n  const [activeModal, setactiveModal] = useState(null);\r\n\r\n  const toggleHeader = () => {\r\n    setHeaderContentActive(!headerContentActive);\r\n  };\r\n  const getData = () => {\r\n    setPopup(<ScreenSpinner />);\r\n    setTimeout(() => setPopup(null), 2000);\r\n  };\r\n  const getNotify = () => {\r\n    if (snackbar) return;\r\n    setSnackbar(\r\n      <Snackbar\r\n        layout=\"vertical\"\r\n        onClose={() => setSnackbar(null)}\r\n        before={\r\n          <Avatar size={24} style={blueBackground}>\r\n            <Icon24Done fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n      >\r\n        Уведомления о подкастах включены\r\n      </Snackbar>\r\n    );\r\n  };\r\n  const addActionLogItem = (value) => {\r\n    console.log(['addActionLogItem', value]);\r\n    setactionLog([...actionLog, value]);\r\n  };\r\n  const getAlert = () => {\r\n    setAlert(\r\n      <Alert\r\n        actions={[\r\n          {\r\n            title: 'Отмена',\r\n            autoclose: true,\r\n            mode: 'cancel',\r\n            action: () =>\r\n              addActionLogItem('Право на модерацию контента ОТМЕНА.'),\r\n          },\r\n          {\r\n            title: 'Добавить',\r\n            autoclose: true,\r\n            action: () =>\r\n              addActionLogItem('Право на модерацию контента добавлено.'),\r\n          },\r\n        ]}\r\n        onClose={() => setAlert(null)}\r\n      >\r\n        <h2>Подтвердите действие</h2>\r\n        <p>Добавить пользователю право на модерацию контента.</p>\r\n      </Alert>\r\n    );\r\n  };\r\n  const modal = (\r\n    <ModalRoot activeModal={activeModal} onClose={() => setactiveModal(null)}>\r\n      <ModalPage\r\n        id=\"modalPage\"\r\n        onClose={() => setactiveModal(null)}\r\n        header={\r\n          <ModalPageHeader\r\n            left={\r\n              <PanelHeaderButton onClick={() => setactiveModal(null)}>\r\n                <Icon24Done />\r\n              </PanelHeaderButton>\r\n            }\r\n            right={\r\n              <PanelHeaderButton onClick={() => setactiveModal(null)}>\r\n                <Icon24Done />\r\n              </PanelHeaderButton>\r\n            }\r\n          >\r\n            Информация о пользователе\r\n          </ModalPageHeader>\r\n        }\r\n        dynamicContentHeight\r\n      >\r\n        <List>\r\n          <Cell>\r\n            <InfoRow header=\"Дата рождения\">30 января 1993</InfoRow>\r\n          </Cell>\r\n          <Cell>\r\n            <InfoRow header=\"Родной город\">Ереван</InfoRow>\r\n          </Cell>\r\n          <Cell>\r\n            <InfoRow header=\"Место работы\">Команда ВКонтакте</InfoRow>\r\n          </Cell>\r\n        </List>\r\n      </ModalPage>\r\n\r\n      <ModalCard\r\n        id=\"faq\"\r\n        onClose={() => setactiveModal(null)}\r\n        dynamicContentHeight\r\n      >\r\n        FAQ\r\n      </ModalCard>\r\n    </ModalRoot>\r\n  );\r\n\r\n  return (\r\n    <Root activeView={activeView}>\r\n      <View\r\n        activePanel={activePanel}\r\n        id=\"view1\"\r\n        popout={(popup, alert)}\r\n        modal={modal}\r\n      >\r\n        <Panel id=\"panel1\">\r\n          <PanelHeader\r\n            left={\r\n              <PanelHeaderButton>\r\n                <Icon28UsersOutline />\r\n              </PanelHeaderButton>\r\n            }\r\n            right={<PanelHeaderEdit />}\r\n          >\r\n            <PanelHeaderContent\r\n              aside={\r\n                <Icon16Dropdown\r\n                  style={{\r\n                    transform: `rotate(${\r\n                      headerContentActive ? '180deg' : '0'\r\n                    })`,\r\n                  }}\r\n                />\r\n              }\r\n              onClick={() => toggleHeader()}\r\n            >\r\n              REACT APP VK\r\n            </PanelHeaderContent>\r\n          </PanelHeader>\r\n          <PanelHeaderContext\r\n            opened={headerContentActive}\r\n            onClose={toggleHeader}\r\n          >\r\n            <List>\r\n              <Cell before={<Icon28UsersOutline />} data-mode=\"all\">\r\n                Communities\r\n              </Cell>\r\n              <Cell before={<Icon28SettingsOutline />} data-mode=\"managed\">\r\n                Managed Communities\r\n              </Cell>\r\n            </List>\r\n          </PanelHeaderContext>\r\n          <Group>\r\n            <Cell\r\n              expandable\r\n              before={<Icon28UserOutline />}\r\n              onClick={() => setactivePanel('panel2')}\r\n            >\r\n              Friends\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon28UsersOutline />}\r\n              onClick={() => setactivePanel('panel2')}\r\n            >\r\n              Communities\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon28MusicOutline />}\r\n              onClick={() => setactivePanel('panel2')}\r\n            >\r\n              Music\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon28DownloadOutline />}\r\n              onClick={() => getData()}\r\n            >\r\n              Start Spinner\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon28Notifications />}\r\n              onClick={() => getNotify()}\r\n            >\r\n              NotifySnack\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon28BlockOutline style={{ color: 'red' }} />}\r\n              onClick={() => getAlert()}\r\n            >\r\n              Alert\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon24CommentOutline style={{ color: 'blue' }} />}\r\n              onClick={() => setactiveModal('faq')}\r\n            >\r\n              Modal FAQ\r\n            </Cell>\r\n            <Cell\r\n              expandable\r\n              before={<Icon24CommentOutline style={{ color: 'green' }} />}\r\n              onClick={() => setactiveModal('modalPage')}\r\n            >\r\n              Modal Page\r\n            </Cell>\r\n          </Group>\r\n          {snackbar}\r\n          {actionLog.map((value, i) => (\r\n            <Div key={i}>{value}</Div>\r\n          ))}\r\n        </Panel>\r\n        <Panel id=\"panel2\">\r\n          <PanelHeader\r\n            separator={false}\r\n            left={<PanelHeaderBack onClick={() => setactivePanel('panel1')} />}\r\n          >\r\n            Communities\r\n          </PanelHeader>\r\n          <Search />\r\n          <Cell\r\n            description=\"Humor\"\r\n            // before={<Avatar />}\r\n            onClick={() => setactivePanel('panel3')}\r\n          >\r\n            Swipe Right\r\n          </Cell>\r\n          <Cell\r\n            description=\"Cultural Center\"\r\n            // before={<Avatar />}\r\n            onClick={() => setactivePanel('panel3')}\r\n          >\r\n            Out Cinema\r\n          </Cell>\r\n          <Cell\r\n            description=\"Movies\"\r\n            // before={<Avatar />}\r\n            onClick={() => setactivePanel('panel3')}\r\n          >\r\n            #ARTPOKAZ\r\n          </Cell>\r\n        </Panel>\r\n        <Panel id=\"panel3\" centered>\r\n          <PanelHeader\r\n            left={<PanelHeaderBack onClick={() => setactivePanel('panel2')} />}\r\n          >\r\n            Out Cinema\r\n          </PanelHeader>\r\n          <Spinner />\r\n          <div style={{ marginTop: 10 }}>Centered Content</div>\r\n        </Panel>\r\n      </View>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as connect from '@vkontakte/vkui-connect';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}