{"version":3,"sources":["constants/actionTypes/user.ts","constants/index.ts","screens/Form.tsx","actions/user.ts","constants/api.ts","screens/FAQ.tsx","components/CardComponent.tsx","screens/Orders.tsx","App.tsx","actions/vk.ts","serviceWorker.js","reducers/orders/index.ts","reducers/user/index.ts","reducers/index.ts","constants/actionTypes/orders.ts","store/index.ts","index.tsx"],"names":["LOGIN","START","SUCCESS","FAIL","Form","id","activePanel","headerLabel","dispatch","useDispatch","userData","useSelector","state","user","store","useStore","first_name","last_name","middle_name","dob","serial","acceptRules","useState","formValid","setFormValid","useEffect","console","log","handlerChangeField","evt","payload","value","target","type","checked","key","name","sendForm","a","fetch","method","headers","body","JSON","stringify","checkInfo","error","getState","style","textAlign","margin","level","weight","top","status","bottom","onChange","e","size","disabled","onClick","marginBottom","FAQ","label","map","item","idx","expandable","CardComponent","title","date","mode","height","multiline","before","marginRight","color","text","caption","after","Orders","isFetching","setIsFetching","onRefresh","setTimeout","separator","App","activeStory","setActiveStory","activeModal","ordersBadgeCount","orders","bridge","subscribe","data","send","supports","width","initVK","userInfoData","getUserInfo","TABS","story","icon","component","handleGoTo","tabbar","shadow","toString","selected","data-story","Boolean","window","location","hostname","match","initialState","items","sex","city","photo_100","timezone","combineReducers","action","message","error_data","createStore","rootReducer","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a366c0a8.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\r\nexport const CHANGE_PROFILE = 'CHANGE_PROFILE';\r\nexport const CHECK_FORM_DATA = 'CHECK_FORM_DATA'; \r\n","export * from './api';\r\nexport * from './actionTypes/user';\r\n//\r\nexport const VK_APP_NAME = 'KBM';\r\n//Tabs\r\nexport const LABEL_TAB_FORM = 'Форма заявки';\r\nexport const LABEL_TAB_ORDERS = 'Мои заявки';\r\nexport const LABEL_TAB_FAQ = 'FAQ';\r\nexport const LABEL_TAB_SPLASH = 'SPLASH';\r\n//action types all\r\nexport const START = '_START';\r\nexport const SUCCESS = '_SUCCESS';\r\nexport const FAIL = '_FAIL';\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch, useStore } from \"react-redux\";\r\nimport { changeProfile, checkFormData } from \"../actions/user\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  View,\r\n  Panel,\r\n  PanelHeader,\r\n  Div,\r\n  FormLayout,\r\n  Input,\r\n  Button,\r\n  Title,\r\n  Caption,\r\n  Checkbox,\r\n  Link,\r\n} from \"@vkontakte/vkui\";\r\nimport type { TScreen } from \"../types\";\r\n\r\nexport const Form = ({ id, activePanel, headerLabel }: TScreen) => {\r\n  //TODO: type USER\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state: any) => state.user);\r\n  const store = useStore();\r\n  const {\r\n    first_name, last_name, middle_name,dob, serial, acceptRules\r\n  } = userData;\r\n\r\n  const [formValid, setFormValid] = useState<boolean>(true); \r\n\r\n  useEffect(() => {\r\n    console.log([\"USER === \", userData]);\r\n    console.log([\"first_name\", first_name]);\r\n    console.log([\"last_name\", last_name]);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormValid(!(first_name !== null && last_name !== null && middle_name !== null && dob !== null && serial !== null && acceptRules !== false))\r\n  }, [first_name,last_name,middle_name,dob,serial,acceptRules])\r\n\r\n  const LABEL_BTN_POST = \"Проверить КБМ\";\r\n  const TOP_TEXT =\r\n    \"Восстановим КБМ и снизим стоимость ОСАГО\";\r\n  const INFO_TEXT =\r\n    \"*Средний срок обработки заявки 1 - 3 дня. Максимально возможный - 7 дней. Если КБМ уменьшится на 5% или мы не сможем его уменьшить - мы вернём вам деньги\";\r\n\r\n\r\n\r\n  const handlerChangeField = (evt: any) => {\r\n    const value = evt.target.type === 'checkbox' ? evt.target.checked : evt.target.value;\r\n    const key = evt.target.name\r\n    changeProfile({[key]:value})(dispatch);\r\n  };\r\n\r\n\r\n  const sendForm = (evt:any) => {\r\n    console.log(['sendForm', ])\r\n    checkFormData({\r\n      dob,\r\n      first_name,\r\n      last_name,\r\n      middle_name,\r\n      serial \r\n    })(dispatch, store.getState);\r\n  }\r\n  return (\r\n    <View id={id} activePanel={activePanel}>\r\n      <Panel id={id}>\r\n        <PanelHeader>{headerLabel}</PanelHeader>\r\n        <Title\r\n          style={{ textAlign: \"center\", margin: \"20px 0\" }}\r\n          level=\"2\"\r\n          weight=\"bold\"\r\n        >\r\n          {TOP_TEXT}\r\n        </Title>\r\n        <FormLayout style={{ margin: \"10px\" }}>\r\n          {/* TODO: for fields */}\r\n        {/*onChange={ (evt) => handlerChangeField(evt, \"last_name\")} */}\r\n          <Input\r\n            top=\"Фамилия\"\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={last_name}\r\n            status={last_name? \"valid\" : \"error\"}\r\n            bottom={last_name? \"\" : \"Пожалуйста, введите Фамилию.\"}\r\n            onChange={(e)=>{handlerChangeField(e)}}\r\n          />\r\n          <Input\r\n            top=\"Имя\"\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={first_name }\r\n            status={first_name? \"valid\" : \"error\"}\r\n            bottom={first_name? \"\" : \"Пожалуйста, введите Имя.\"}\r\n            onChange={(e)=>{handlerChangeField(e)}}\r\n          />\r\n          <Input\r\n            top=\"Отчество\"\r\n            type=\"text\"\r\n            name=\"middle_name\"\r\n            value={middle_name}\r\n            status={middle_name? \"valid\" : \"error\"}\r\n            bottom={middle_name? \"\" : \"Пожалуйста, введите Отчество.\"}\r\n            onChange={(e)=>{handlerChangeField(e)}}\r\n          />\r\n          <Input\r\n            top=\"Дата рождения\"\r\n            type=\"date\"\r\n            name=\"dob\"\r\n            value={dob}\r\n            status={dob? \"valid\" : \"error\"}\r\n            bottom={dob? \"\" : \"Пожалуйста, введите Дату рождения.\"}\r\n            onChange={(e)=>{handlerChangeField(e)}}\r\n          />\r\n          <Input\r\n            top=\"Номер водительского удостоверения\"\r\n            type=\"text\"\r\n            name=\"serial\"\r\n            value={serial}\r\n            status={serial ? \"valid\" : \"error\"}\r\n            bottom={\r\n              serial ? \"\" : \"Поле номер в/у обязательно для заполнения\"\r\n            }\r\n            onChange={(e)=>{handlerChangeField(e)}}\r\n          />\r\n           <Checkbox   name=\"acceptRules\"  value={acceptRules} onChange={(e)=>{handlerChangeField(e)}}>Согласен с <Link>пользовательским соглашением</Link></Checkbox>\r\n          <Button type='submit' size=\"xl\" disabled={formValid} onClick={(evt)=>sendForm(evt)}>{LABEL_BTN_POST}</Button>\r\n           <Caption level=\"1\" weight=\"regular\" style={{ marginBottom: 16 }}>{INFO_TEXT}</Caption>\r\n        </FormLayout>\r\n      </Panel>\r\n    </View>\r\n  );\r\n};\r\n","import { START, SUCCESS, FAIL } from './../constants/index';\r\nimport { LOGIN, CHANGE_PROFILE } from './../constants/actionTypes/user';\r\nimport { VK_API, KBM_API } from '../constants/api';\r\nimport { Action, ActionCreator, Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {TAction} from '../reducers/user/index'\r\nimport { CHECK_FORM_DATA } from '../constants/actionTypes/user';\r\n\r\n\r\n// const thunkAction: ActionCreator<ThunkAction<Action, IState, void>> = (\r\n//   text: string\r\n// ) => {\r\n//   return (dispatch: Dispatch<IState>): Action => {\r\n//     return dispatch({\r\n//       type: SET_TEXT,\r\n//       text\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const changeProfile = (payload:any) => ( dispatch: Dispatch)=> {\r\n  console.log(['changeProfile payload',payload ]);\r\n  dispatch({\r\n    type: CHANGE_PROFILE,\r\n    payload\r\n  });\r\n}\r\n\r\nexport const getUserInfo = () =>  async(dispatch: Dispatch, store: any) => {\r\n  console.log(['getUserInfo', ]);\r\n  try {\r\n    dispatch({\r\n      type: `${LOGIN}${START}`,\r\n    });\r\n    const userInfoData = await bridge.send('VKWebAppGetUserInfo');\r\n    dispatch({\r\n      type: `${LOGIN}${SUCCESS}`,\r\n      payload: userInfoData,\r\n    });\r\n  } catch (error) {\r\n    console.error(['getUserInfo ', error]);\r\n    dispatch({\r\n      type: `${LOGIN}${FAIL}`,\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkFormData = (payload:any) =>  async(dispatch: Dispatch, store: any) => {\r\n  console.log(['action checkFormData',payload ]);\r\n  try {\r\n    dispatch({\r\n      type: `${CHECK_FORM_DATA}${START}`,\r\n    });\r\n    const checkInfo = await fetch(`${KBM_API}check`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        payload\r\n      })\r\n    });\r\n    console.log(['checkInfo',checkInfo ]);\r\n    \r\n    dispatch({\r\n      type: `${CHECK_FORM_DATA}${SUCCESS}`,\r\n      payload: checkInfo,\r\n    });\r\n  } catch (error) {\r\n    console.error(['CHECK_FORM_DATA ', error]);\r\n    dispatch({\r\n      type: `${CHECK_FORM_DATA}${FAIL}`,\r\n    });\r\n  }\r\n};\r\n","//API\r\nexport const VK_API = 'https://api.vk.com/method/';\r\nexport const KBM_API = 'https://kbmpro.ru/api/';\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Panel, PanelHeader, List, Cell } from '@vkontakte/vkui';\r\nimport type { TScreen } from '../types';\r\n\r\nexport const FAQ = ({ id, activePanel, headerLabel }: TScreen) => {\r\n  useEffect(() => {\r\n    console.log(['id', id]);\r\n    console.log(['activePanel', activePanel]);\r\n  }, []);\r\n  const QUESTIONS_LIST = [\r\n    { key: '0', label: 'Question 1?' },\r\n    { key: '1', label: 'Question 2?' },\r\n    { key: '2', label: 'Question 3?' },\r\n  ];\r\n  return (\r\n    <View id={id} activePanel={activePanel}>\r\n      <Panel id={id}>\r\n        <PanelHeader>{headerLabel}</PanelHeader>\r\n        <List>\r\n          {QUESTIONS_LIST.map((item, idx) => (\r\n            <Cell expandable>{item.label}</Cell>\r\n          ))}\r\n        </List>\r\n      </Panel>\r\n    </View>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { Card, Cell, Switch, RichCell, Button } from '@vkontakte/vkui';\r\nimport Icon28DoneOutline from '@vkontakte/icons/dist/28/done_outline';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//TODO:\r\ntype TCard = {\r\n  title: string;\r\n  date: string;\r\n  status: string;\r\n};\r\n\r\nexport const CardComponent = ({ title, date, status }: TCard) => {\r\n  return (\r\n    <Card size=\"l\" mode=\"shadow\" style={{ height: 96 }}>\r\n      <RichCell\r\n        multiline\r\n        before={\r\n          <Icon28DoneOutline style={{ marginRight: 10, color: 'green' }} />\r\n        }\r\n        text=\"Заявка на проверку КБМ\"\r\n        caption={date}\r\n        after={status}\r\n      >\r\n        {title}\r\n      </RichCell>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Panel,\r\n  PanelHeader,\r\n  PullToRefresh,\r\n  Div,\r\n  CardGrid,\r\n  Group,\r\n} from '@vkontakte/vkui';\r\nimport type { TScreen } from '../types';\r\nimport { CardComponent } from '../components/CardComponent';\r\n\r\nexport const Orders = ({ id, activePanel, headerLabel }: TScreen) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  useEffect(() => {\r\n    console.log(['id', id]);\r\n    console.log(['activePanel', activePanel]);\r\n  }, []);\r\n  const handlerRefresh = () => {\r\n    setIsFetching(true);\r\n    setTimeout(() => {\r\n      setIsFetching(false);\r\n    }, 2000);\r\n  };\r\n  return (\r\n    <View id={id} activePanel={activePanel}>\r\n      <Panel id={id}>\r\n        <PanelHeader>{headerLabel}</PanelHeader>\r\n        <PullToRefresh onRefresh={handlerRefresh} isFetching={isFetching}>\r\n          <Group separator=\"hide\">\r\n            <CardGrid>\r\n              <CardComponent\r\n                title={'Заявка №228'}\r\n                date={'11.11.2020'}\r\n                status={'Выполнено'}\r\n              />\r\n              <CardComponent\r\n                title={'Заявка №228'}\r\n                date={'11.11.2020'}\r\n                status={'Выполнено'}\r\n              />\r\n\r\n              <CardComponent\r\n                title={'Заявка №228'}\r\n                date={'11.11.2020'}\r\n                status={'Выполнено'}\r\n              />\r\n            </CardGrid>\r\n          </Group>\r\n        </PullToRefresh>\r\n      </Panel>\r\n    </View>\r\n  );\r\n};\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux';\r\nimport {\r\n  Epic,\r\n  Tabbar,\r\n  TabbarItem,\r\n  ModalRoot,\r\n  ModalPage,\r\n  Div,\r\n} from '@vkontakte/vkui';\r\nimport Icon28ArticleOutline from '@vkontakte/icons/dist/28/article_outline';\r\nimport Icon28ArchiveOutline from '@vkontakte/icons/dist/28/archive_outline';\r\nimport Icon28MessagesOutline from '@vkontakte/icons/dist/28/messages_outline';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n  VK_APP_NAME,\r\n  LABEL_TAB_FORM,\r\n  LABEL_TAB_ORDERS,\r\n  LABEL_TAB_FAQ,\r\n  LABEL_TAB_SPLASH\r\n} from './constants';\r\n\r\nimport { Form, Orders, FAQ, SplashScreens } from './screens';\r\nimport { OrderState } from './reducers/orders';\r\n\r\nimport { initVK } from './actions/vk';\r\nimport { getUserInfo } from './actions/user';\r\n\r\n//TODO:\r\ntype TPanelHeaderContent = {\r\n  children?: string;\r\n};\r\n\r\nexport const PanelHeaderContentComp: FunctionComponent<TPanelHeaderContent> = (\r\n  props\r\n) => <div>{props.children}</div>;\r\n\r\nexport const App = () => {\r\n  const dispatch = useDispatch();\r\n  const store = useStore();\r\n\r\n  const [activeStory, setActiveStory] = useState<string>('form'); //splash for init\r\n  const APP_NAME: string = VK_APP_NAME;\r\n  const [activeModal, setactiveModal] = useState<string | null>(null);\r\n  const [ordersBadgeCount, setordersBadgeCount] = useState<number | null>(3);\r\n  const isFetching = useSelector(\r\n    (state: OrderState) => state.orders.isFetching\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(['isFetching', isFetching]);\r\n    initVK();\r\n    getUserInfo()(dispatch, store.getState);\r\n  });\r\n//TODO: for INIT production\r\n const handleGoToFirstScreen = () => {\r\n    setActiveStory('form')\r\n  }\r\n\r\n  const modal = (\r\n    <ModalRoot activeModal={activeModal}>\r\n      <ModalPage id=\"modalMain\">...</ModalPage>\r\n      {/* <ModalCard id=\"faq\">...</ModalCard> */}\r\n    </ModalRoot>\r\n  );\r\n\r\n  const TABS = [\r\n    {\r\n      story: 'form',\r\n      label: LABEL_TAB_FORM,\r\n      icon: <Icon28ArticleOutline />,\r\n      component:\r\n        <Form id={'form'} activePanel={'form'} headerLabel={LABEL_TAB_FORM}  handleGoTo={()=>{}} />\r\n     ,\r\n    },\r\n    {\r\n      story: 'orders',\r\n      label: LABEL_TAB_ORDERS,\r\n      icon: <Icon28ArchiveOutline />,\r\n      component:\r\n        <Orders\r\n          id={'orders'}\r\n          activePanel={'orders'}\r\n          headerLabel={LABEL_TAB_ORDERS}\r\n          handleGoTo={()=>{}}\r\n        />\r\n      ,\r\n    },\r\n    {\r\n      story: 'faq',\r\n      label: LABEL_TAB_FAQ,\r\n      icon: <Icon28MessagesOutline />,\r\n      component:\r\n        <FAQ id={'faq'} activePanel={'faq'} headerLabel={LABEL_TAB_FAQ}  handleGoTo={()=>{}} />\r\n     ,\r\n    },\r\n    // {\r\n    //   story: 'splash',\r\n    //   label: LABEL_TAB_SPLASH,\r\n    //   icon: <Icon28MessagesOutline />,\r\n    //   component: \r\n    //     <SplashScreens id={'splash'} activePanel={'splash'} headerLabel={LABEL_TAB_SPLASH}  />\r\n    //  ,\r\n    // },\r\n  ];\r\n  // if(activeStory == 'splash'){\r\n  //   return <SplashScreens id={'splash'} activePanel={'splash'} headerLabel={LABEL_TAB_SPLASH} handleGoTo={handleGoToFirstScreen} />\r\n  // }\r\n  return (\r\n    <Epic\r\n      activeStory={activeStory}\r\n      tabbar={\r\n        <Tabbar shadow={false}>\r\n          {TABS.map((item, idx) => {\r\n            return (\r\n              <TabbarItem\r\n                key={idx.toString()}\r\n                label={item.story === 'orders' ? ordersBadgeCount : null}\r\n                onClick={() => setActiveStory(item.story)}\r\n                selected={activeStory === item.story}\r\n                data-story={item.story}\r\n                text={item.label}\r\n              >\r\n                {item.icon}\r\n              </TabbarItem>\r\n            );\r\n          })}\r\n        </Tabbar>\r\n      }\r\n    >\r\n      {TABS.map((item, idx) => {\r\n        return (\r\n          item.component\r\n        );\r\n      })}\r\n    </Epic>\r\n  );\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport { START, SUCCESS, FAIL } from './../constants/index';\r\nimport { VK_API } from '../constants/api';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport const initVK = () => {\r\n  try {\r\n    bridge.subscribe((e) => console.log(e));\r\n    const data = bridge.send('VKWebAppInit', {});\r\n    // Handling received data\r\n    console.log('bridge data', data);\r\n    if (bridge.supports('VKWebAppResizeWindow')) {\r\n      bridge.send('VKWebAppResizeWindow', { width: 800, height: 1000 });\r\n    }\r\n  } catch (error) {\r\n    console.log(['ERROR vkINIT', error]);\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { START, SUCCESS, FAIL } from '../../constants/index';\r\nimport { SET_ORDERS } from '../../constants/actionTypes/orders';\r\nconst initialState = {\r\n  items: [],\r\n  error: '',\r\n  isFetching: false,\r\n};\r\n\r\nexport interface OrderState {\r\n  orders: any;\r\n}\r\n\r\ninterface SetOrdersStart {\r\n  type: typeof SET_ORDERS;\r\n  payload: any;\r\n}\r\n\r\ninterface SetOrdersSuccess {\r\n  type: typeof SET_ORDERS;\r\n  payload: any;\r\n}\r\n\r\ninterface SetOrdersFail {\r\n  type: typeof SET_ORDERS;\r\n  payload: any;\r\n}\r\n\r\ntype TAction = SetOrdersStart | SetOrdersSuccess | SetOrdersFail;\r\n\r\nexport const orders = (state = initialState, action: TAction) => {\r\n  switch (action.type) {\r\n    case `${SET_ORDERS}${START}`:\r\n      return { ...state, isFetching: true };\r\n\r\n    case `${SET_ORDERS}${SUCCESS}`:\r\n      return { ...state, isFetching: false, items: [...action.payload] };\r\n\r\n    case `${SET_ORDERS}${FAIL}`:\r\n      return { ...state, isFetching: false, error: action.payload.message };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { START, SUCCESS, FAIL } from '../../constants/index';\r\nimport { LOGIN, CHANGE_PROFILE} from '../../constants/actionTypes/user';\r\nconst initialState = {\r\n    id: null,\r\n    first_name: null,\r\n    last_name:null,\r\n    middle_name:null,\r\n    dob: null,\r\n    serial:null,\r\n    sex: null,\r\n    city: null,\r\n    photo_100: null,\r\n    acceptRules:false,\r\n    timezone: null,\r\n    error: '',\r\n    isFetching: false,\r\n};\r\n\r\ninterface LoginStart {\r\n  type: typeof LOGIN;\r\n  payload: any;\r\n}\r\n\r\ninterface LoginSuccess {\r\n  type: typeof LOGIN;\r\n  payload: any;\r\n}\r\n\r\ninterface LoginFail {\r\n  type: typeof LOGIN;\r\n  payload: any;\r\n}\r\n\r\ninterface ChangeProfile {\r\n  type: typeof CHANGE_PROFILE;\r\n  payload: any;\r\n}\r\n\r\nexport type TAction = LoginStart | LoginSuccess | LoginFail | ChangeProfile;\r\n\r\nexport const user = (state = initialState, action: TAction) => {\r\n  switch (action.type) {\r\n    case `${LOGIN}${START}`:\r\n      console.log([`${LOGIN}${START}`]);\r\n      return { ...state, isFetching: true };\r\n\r\n    case `${LOGIN}${SUCCESS}`:\r\n      console.log([`${LOGIN}${SUCCESS}`, action.payload]);\r\n      return { ...state, isFetching: false,  ...action.payload };\r\n\r\n    case `${LOGIN}${FAIL}`:\r\n      console.log([`${LOGIN}${FAIL}`]);\r\n      return { ...state, isFetching: false, error: action.payload.error_data };\r\n\r\n    case `${CHANGE_PROFILE}`: \r\n    console.log(['CHANGE_PROFILE',action.payload ]);\r\n      return { ...state, ...action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { orders } from './orders';\r\nimport { user } from './user';\r\n\r\n\r\nexport default combineReducers({\r\n  orders,\r\n  user,\r\n});\r\n","export const SET_ORDERS = 'SET_ORDERS';\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n// import * as connect from '@vkontakte/vkui-connect';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}